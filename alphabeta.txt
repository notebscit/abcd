#include<iostream.h>
#include<conio.h>
#include<stdlib.h>
const MAX=1000;
const MIN=-1000;


int minimax(int depth,int nodeindex,bool maxmizingplayer,int values[],int alpha,int beta){
if(depth==3)
return values[nodeindex];
if(maxmizingplayer){
int best=MIN;
for(int i=0;i<2;i++){
int val=minimax(depth+1,nodeindex*2+i,false,values,alpha,beta);
best=max(best,val);
alpha=max(alpha,best);
if(beta<=alpha)
break;
}
return best;
}

else
{
int best=MAX;
for(int i=0;i<2;i++){
int val=minimax(depth+1,nodeindex*2+i,true,values,alpha,beta);
best=min(best,val);
alpha=min(alpha,best);
if(beta<=alpha)
break;
}
return best;
}
}


void main(){
int values[9]={3,9,64,5,89,61,2,0,-1};
clrscr();
cout<<"The Optimal values is :"<<minimax(0,0,true,values,MIN,MAX);
getch();
}
